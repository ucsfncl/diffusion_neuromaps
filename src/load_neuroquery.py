from neuroquery import fetch_neuroquery_model, NeuroQueryModel
import numpy as np
import pandas as pd
import os
from neuromaps.parcellate import Parcellater


encoder = NeuroQueryModel.from_data_dir(fetch_neuroquery_model())
metric_path = "diffusion_neuromaps/data"
glasser_df = pd.read_table("diffusion_neuromaps/atlases/Glasser360_Atlas.txt", sep=",", index_col=0, header=0, encoding="utf-8")
atlas_path = "diffusion_neuromaps/atlases/Glasser360_Atlas.nii.gz"
parcellator = Parcellater(atlas_path, "MNI152", resampling_target="parcellation")

cognitive_terms = [
    "action",
    "eating",
    "insight",
    "naming",
    "semantic memory",
    "adaptation",
    "efficiency",
    "integration",
    "navigation",
    "sentence comprehension",
    "addiction",
    "effort",
    "intelligence",
    "object recognition",
    "skill",
    "anticipation",
    "emotion",
    "intention",
    "pain",
    "sleep",
    "anxiety",
    "emotion regulation",
    "interference",
    "perception",
    "social cognition",
    "arousal",
    "empathy",
    "judgment",
    "planning",
    "spatial attention",
    "association",
    "encoding",
    "knowledge",
    "priming",
    "speech perception",
    "attention",
    "episodic memory",
    "language",
    "psychosis",
    "speech production",
    "autobiographical memory",
    "expectancy",
    "language comprehension",
    "reading",
    "strategy",
    "balance",
    "expertise",
    "learning",
    "reasoning",
    "strength",
    "belief",
    "extinction",
    "listening",
    "recall",
    "stress",
    "categorization",
    "face recognition",
    "localization",
    "recognition",
    "sustained attention",
    "cognitive control",
    "facial expression",
    "loss",
    "rehearsal",
    "task difficulty",
    "communication",
    "familiarity",
    "maintenance",
    "reinforcement learning",
    "thought",
    "competition",
    "fear",
    "manipulation",
    "response inhibition",
    "uncertainty",
    "concept",
    "fixation",
    "meaning",
    "response selection",
    "updating",
    "consciousness",
    "focus",
    "memory",
    "retention",
    "utility",
    "consolidation",
    "gaze",
    "memory retrieval",
    "retrieval",
    "valence",
    "context",
    "goal",
    "mental imagery",
    "reward anticipation",
    "verbal fluency",
    "coordination",
    "hyperactivity",
    "monitoring",
    "rhythm",
    "visual attention",
    "decision",
    "imagery",
    "mood",
    "risk",
    "visual perception",
    "decision making",
    "impulsivity",
    "morphology",
    "rule",
    "word recognition",
    "detection",
    "induction",
    "motor control",
    "salience",
    "working memory",
    "discrimination",
    "inference",
    "movement",
    "search",
    "distraction",
    "inhibition",
    "multisensory",
    "selective attention"
]


for term in cognitive_terms:
    result = encoder(term)
    parc = parcellator.fit_transform(result["brain_map"], "MNI152", True).astype(float).ravel()
    df = pd.DataFrame(parc, columns=[term], index=glasser_df.index).astype(float)
    df.index.name = "region"
    df.to_csv(os.path.join(metric_path, "neuroquery", f"{term}_glasser_ave.csv"), index=True, header=True)
